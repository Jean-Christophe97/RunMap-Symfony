{% extends 'base.html.twig' %}

{% block title %}Recherche des lieux!{% endblock %}

{% block navbar %}
<nav class="navbar navbar-expand-lg navbar-light bg-light fixed-top">
{% endblock %}

{% block mapboxscripts %}
    {# script js mapbox #}
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v1.5.0/mapbox-gl.js'></script>
    {# script css mapbox #}
    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v1.5.0/mapbox-gl.css' rel='stylesheet' />
{% endblock %}

{% block body %}
    <style>
        body { margin:0; padding:0; }
        
        {# geocoder #}
        .geocoder {
            position:absolute;
            z-index:1;
            width:50%;
            left:50%;
            margin-left:-47%;
            top:90px;
        }
        .mapboxgl-ctrl-geocoder { min-width:100%; }

        {# map #}
        #map { position:absolute; top:0; bottom:0; width:100%; }

        {# popup #}
        .mapboxgl-popup {
            max-width: 200px;
            font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
        }

        {# marker #}
        #marker {
            background-image: url('/assets/image/yellow-marker.png');
            background-size: contain;
            background-repeat: no-repeat;
            width: 17px;
            height: 17px;
            cursor: pointer;
            border: 1px solid white;
            border-radius: 50%;

        }

        {# popup #}
        .popup-place-name {
            font-weight: bold;
        }
    </style>
    
    {# mapbox-gl-geocoder #}
    <script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.4.2/mapbox-gl-geocoder.min.js'></script>
    <link rel='stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.4.2/mapbox-gl-geocoder.css' type='text/css' />
    <!-- Promise polyfill script required to use Mapbox GL Geocoder in IE 11 -->
    <script src="https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.auto.min.js"></script>
    <script src="https://unpkg.com/@mapbox/mapbox-sdk/umd/mapbox-sdk.min.js"></script>

    {# map & geocoder containers #}
    <div id='map'></div>
    <div id='geocoder' class='geocoder'></div>


    {# map & geocoder script #}
    <script>
        // TODO: il faudra faire comme avec le .env.local :  ne pas laisser le token sur github.
        mapboxgl.accessToken = 'pk.eyJ1IjoiamVhbi1jaHJpc3RvcGhlOTciLCJhIjoiY2sybm1seDhhMG82MDNsbno3MzM0YnA1ayJ9.S2WLt5sQgh-5V_xYo6aPFg';
        
        var map = new mapboxgl.Map({
                    container: 'map', // container id
                    style: 'mapbox://styles/mapbox/outdoors-v10', // stylesheet location
                    center: [2.23056, 48.98806], // starting position [lng, lat]
                    zoom: 5 // starting zoom
                });

        var geocoder = new MapboxGeocoder({
                    accessToken: mapboxgl.accessToken,
                    mapboxgl: mapboxgl,
                    marker:false, // to unset the marker after Geocoder result
                    placeholder:"tappe le nom de ta ville",
                    countries: 'fr',
                    types: 'place',
                });

                document.getElementById('geocoder').appendChild(geocoder.onAdd(map));        

        var mapboxClient = mapboxSdk({ accessToken: mapboxgl.accessToken });
        
        // loop to create a marker and a popup for each place
        {% for place in places %}
        // request to have the latitude and longitude of a place
        mapboxClient.geocoding.forwardGeocode({
            query: '{{place.adress}},{{place.city.name}}',
            autocomplete: false,
            limit: 1
        })
        .send()
        .then(function (response) {
            if (response && response.body && response.body.features && response.body.features.length)
            {
                // get the longitude and latitude
                var feature = response.body.features[0];

                // create the popup
                var popup = new mapboxgl.Popup({ offset: 10 }) // offset === margin-bottom
                    .setHTML('<div class="popup-place-name">{{place.name}}</div><div>{{place.city.name}}</div><div><a href="{{ path('place', {id: place.id}) }}">plus de details</a></div>');

                // create DOM element for the marker
                var el = document.createElement('div');
                el.id = 'marker';

                // create the marker
                new mapboxgl.Marker(el)
                    .setLngLat(feature.center)
                    .addTo(map)
                    .setPopup(popup);
            }
        });
        {% endfor %}
    </script>
{% endblock %}
